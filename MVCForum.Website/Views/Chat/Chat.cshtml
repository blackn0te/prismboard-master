
@{
    ViewBag.Title = "Chat";
}
<style>
    .container {
        margin: 0;
        padding: 0;
    }
    .body-content {
        margin: 0;
        padding: 0;
    }
    .history {
        border: 1px solid black;
    }

    #mario-chat {
        border: 1px solid black;
        width: 100%;
        margin-left:0;
        padding: 1%;
        height: 500px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
    }

    .inner {
        flex: 1;
        overflow-y: scroll;
        display: flex;
        flex-direction: column;
        min-width: 300px;
    }

    .chatmsg {
        border-radius: 15px;
        background-color: blanchedalmond;
        padding: 2%;
        margin: 2px;
        width: auto;
        max-width: 60%; /*orignally 60%*/
        height: auto;
        display: block;
    }

    #message {
        max-width: 200%;
        width: 65%;
        margin-left: 15%;
        margin-right: auto;
        display: inline-block;
    }

    .connectedusers {
        background-color: #f3f3f3;
        border-radius: 10px;
        padding: 2%;
    }
    .tasklist {
        background-color: #f3f3f3;
        border-radius: 10px;
        padding: 2%;
    }

</style>

<h2>Module_Name here</h2>

<div class="">

    <input type="hidden" id="displayname" /><!-- store username-->
    <input type="hidden" id="displayadminno" /><!-- store adminno-->
    <input type="hidden" id="displaygrp" /><!-- store classgrp-->
    
    <div style="border: 1px solid red; background-color:; padding: 1%; padding-bottom: 5%; padding-top: 5%;" class="row">

        <div class="col-md-2">
            Online Users
            <div style="border: 1px solid black;" class="connectedusers">

            </div>
        </div>

        <div class="col-md-8">
            <div id="mario-chat" class="">
                <div class="inner">
                    <!-- messages will be appended here-->
                </div>
            </div>

            <input type="text" id="message" class=""/>
            <input class="btn btn-success" type="button" id="sendmessage" value="Send"/>
        </div>

        <div class="col-md-2">
            <div style="border: 1px solid blue;" class="tasklist">
                <p> task 1</p>
                <p> task 1</p>
            </div>
        </div>

    </div> <!-- row -->
    
    

    <div class="marcus-chatpage-container">



        

    </div><!-- marcus-chatpage-container -->
</div><!-- giant ass div for page-->


@{
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;

            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message,adminno,classgrp) {
                // Add the message to the page.
                if (classgrp === document.getElementById("displaygrp").value) {

                    if (document.getElementById("displayname").value === name) {
                        //yourself
                        $('.inner').append('<p style="background-color:#99ffcc;" class="chatmsg"><strong>' +
                            htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</p>');
                    }
                    else {

                        //other people (right side)
                        $('.inner').append('<p style="margin-left:auto;" class="chatmsg"><strong>' + htmlEncode(name)
                            + '</strong>: ' + htmlEncode(message) + '</p>');
                    }
                } else {
                    console.log("class group didn't match this, message discarded");
                }
            };//addNewMessageToPage

            chat.client.updateConnectedClients = function(userlist) {
                console.log("updateConnectedClients called");
                $('.connectedusers').empty();
                var listlen = userlist.length;
                for (var i =0; i < listlen; i++) {
                    $('.connectedusers').append('<p> '+ userlist[i] +' </p>');
                }
            };//updateConnectedClients

            chat.client.reHelloClient = function()//when hub resets users after duration, it calls this
            {
                //call chathub clientonline
                chat.server.clientonline2($('#displayname').val());
            };

            chat.client.clearOnlineUserList=function()//clear online user list
            {
                $('.connectedusers').empty();
            }

            // Get the user name
            $('#displayname').val("Marcus");//atsign Model.username or smth

            //get the adminno
            $('#displayadminno').val("174571Y");

            //get the classgrp
            $('#displaygrp').val("1");
            console.log("your classgroup is :"+"");

            // Set initial focus to message input box.
            $('#message').focus();

            // Start the connection.
            $.connection.hub.start().done(function () {
                
                //Client "hello" to hub 
                chat.server.clientonline($('#displayname').val());
              
                // event listener for sending message
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    if ($('#message').val().length > 45) {
                        alert("Please do not send messages that are too long");
                    } else {
                        chat.server.send($('#displayname').val(), $('#message').val(), $('#displayadminno').val(),$('#displaygrp').val());
                    }

                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}